#gotta study and understand the code and also know what improvements were done

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense, Dropout
from tensorflow.keras.callbacks import EarlyStopping
from sklearn.metrics import mean_squared_error, r2_score

# Load and scale data
df = pd.read_csv('Tesla_Nasdaq_Prediction.csv')
scaler = MinMaxScaler()
df_scaled = scaler.fit_transform(df[['Open', 'High', 'Low', 'Volume']])  # Scale only selected columns

# Sequence and target preparation
timesteps = 10
x = []
y = []

for i in range(len(df_scaled) - timesteps):
    x.append(df_scaled[i:i + timesteps])  # Sequence of 10 timesteps
    y.append(df_scaled[i + timesteps, 0])  # Target value for Open price

x = np.array(x)
y = np.array(y)

# Train-test split
x_train, x_test, y_train, y_test = train_test_split(x, y, train_size=0.7, random_state=42)

# Define LSTM model
lstm = Sequential()
lstm.add(LSTM(50, activation='tanh', return_sequences=True, input_shape=(10, 4)))
lstm.add(Dropout(0.3))
lstm.add(LSTM(50, activation='tanh', return_sequences=True))
lstm.add(Dropout(0.3))
lstm.add(LSTM(50, activation='tanh'))
lstm.add(Dense(1))
lstm.compile(optimizer='adam', loss='mse')

# Early stopping
early_stop = EarlyStopping(monitor='val_loss', patience=10, restore_best_weights=True)
lstm.fit(x_train, y_train, batch_size=32, epochs=100, validation_data=(x_test, y_test), callbacks=[early_stop])

# Prediction and evaluation
y_pred = lstm.predict(x_test).flatten()
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R-squared: {r2}")
